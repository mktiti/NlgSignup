CREATE TABLE STUDENT(ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), EMAIL VARCHAR(100) NOT NULL, PASSKEY VARCHAR(50) NOT NULL, UNIQUE(EMAIL));
CREATE TABLE EVENT(ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(100) NOT NULL, DESCRIPTION VARCHAR(1000), MAX_STUDENTS INT NOT NULL, START_TIME TIME NOT NULL, END_TIME TIME NOT NULL, UNIQUE(NAME));
CREATE TABLE SIGNUP(STUDENT_ID INT REFERENCES STUDENT(ID), EVENT_ID INT NOT NULL REFERENCES EVENT(ID), PRIMARY KEY (STUDENT_ID, EVENT_ID));

//New
CREATE TABLE STUDENT(ID INTEGER NOT NULL PRIMARY KEY, EMAIL VARCHAR(100) NOT NULL, PASSKEY VARCHAR(20) NOT NULL, UNIQUE(EMAIL));
CREATE TABLE TIMEFRAME(ID INTEGER NOT NULL PRIMARY KEY, START_TIME TIME NOT NULL, END_TIME TIME NOT NULL, UNIQUE(START_TIME), UNIQUE(END_TIME));
CREATE TABLE EVENT(ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR(50) NOT NULL, DESCRIPTION VARCHAR(200), TIMEFRAME_ID INTEGER NOT NULL REFERENCES TIMEFRAME(ID), MAX_SIGNUPS INT NOT NULL, UNIQUE(NAME));
CREATE TABLE SIGNUP(EVENT_ID INT NOT NULL REFERENCES EVENT(ID), STUDENT_ID INT NOT NULL REFERENCES STUDENT(ID), PRIMARY KEY(EVENT_ID, STUDENT_ID));

//Updated
CREATE TABLE STUDENT(ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR(100) NOT NULL, EMAIL VARCHAR(100) NOT NULL, PASSKEY VARCHAR(20) NOT NULL, UNIQUE(EMAIL));
CREATE TABLE EVENT(ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR(200) NOT NULL, TIMEFRAME_ID INTEGER NOT NULL REFERENCES TIMEFRAME(ID), MAX_SIGNUPS INT NOT NULL, UNIQUE(NAME));

//update2
CREATE TABLE TIMEFRAME(ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), START_TIME TIME NOT NULL, END_TIME TIME NOT NULL, UNIQUE(START_TIME), UNIQUE(END_TIME), PRIMARY KEY (id));
CREATE TABLE EVENT(ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(200) NOT NULL, TIMEFRAME_ID INTEGER NOT NULL REFERENCES TIMEFRAME(ID) ON DELETE CASCADE ON UPDATE RESTRICT, MAX_SIGNUPS INT NOT NULL, UNIQUE(NAME), PRIMARY KEY(ID));
insert into student (name, email, passkey) values ('$TEMP$', '$TEMP$', '$TEMP$');


//FIN
CREATE TABLE TIMEFRAME(ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY, START_TIME TIME NOT NULL, END_TIME TIME NOT NULL, UNIQUE(START_TIME), UNIQUE(END_TIME));
CREATE TABLE EVENT(ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY, NAME VARCHAR(200) NOT NULL, TIMEFRAME_ID INTEGER NOT NULL REFERENCES TIMEFRAME(ID) ON DELETE CASCADE ON UPDATE RESTRICT, MAX_SIGNUPS INT NOT NULL, UNIQUE(NAME));
CREATE TABLE STUDENT(ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1) PRIMARY KEY, NAME VARCHAR(100) NOT NULL, EMAIL VARCHAR(100) NOT NULL, CLASS_YEAR SMALLINT CONSTRAINT YEAR_CHK CHECK (CLASS_YEAR BETWEEN 9 AND 12), SIGN CHAR CONSTRAINT SIGN_CHK CHECK (SIGN IN ('A', 'B', 'C', 'D')), PASSKEY VARCHAR(20) NOT NULL, UNIQUE(EMAIL))
insert into student (name, email, passkey) values ('$TEMP$', '$TEMP$', '$TEMP$');
CREATE TABLE SIGNUP(EVENT_ID INT NOT NULL REFERENCES EVENT(ID) ON DELETE CASCADE ON UPDATE RESTRICT, STUDENT_ID INT NOT NULL REFERENCES STUDENT(ID) ON DELETE CASCADE ON UPDATE RESTRICT, PRIMARY KEY(EVENT_ID, STUDENT_ID));
